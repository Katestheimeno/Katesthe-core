version: '3.8'

services:
  db:
    image: postgres:15
    env_file:
      - ${ENV_FILE:-.env.local}
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-drf_starter}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3
    stop_grace_period: 30s

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    stop_grace_period: 30s

  web:
    build: .
    # command: uv run python manage.py runserver_plus 0.0.0.0:${WEB_PORT:-8000}
    command: ["/app/entrypoint.sh"]
    volumes:
      - .:/app
    ports:
      - "${WEB_PORT:-8000}:8000"
    env_file:
      - ${ENV_FILE:-.env.local}
    environment:
      DEBUG: ${DEBUG:-True}
      DJANGO_ENV: ${DJANGO_ENV:-local}
      WEB_PORT: ${WEB_PORT:-8000}
      PROJECT_NAME: ${PROJECT_NAME:-Katesthe-core}
      PROJECT_DESCRIPTION: ${PROJECT_DESCRIPTION:-A Django REST Framework starter project with ready-to-use authentication, custom user management, and modular app structure.}
      PROJECT_VERSION: ${PROJECT_VERSION:-1.0.0}
      CONTACT_NAME: ${CONTACT_NAME:-Katesthe-core Dev Team}
      CONTACT_EMAIL: ${CONTACT_EMAIL:-support@katesthe-core.com}
      CONTACT_URL: ${CONTACT_URL:-https://github.com/katesthe-core}
      EMAIL_HOST: ${EMAIL_HOST:-localhost}
      EMAIL_PORT: ${EMAIL_PORT:-1025}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS:-False}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER:-}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD:-}
      EMAIL_FRONTEND_DOMAIN: ${EMAIL_FRONTEND_DOMAIN:-}
      THEME_PRIMARY_COLOR: ${THEME_PRIMARY_COLOR:-#6a0dad}
      THEME_ACCENT_COLOR: ${THEME_ACCENT_COLOR:-#4b0082}
      POSTGRES_HOST: ${POSTGRES_HOST:-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      CHANNELS_REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_worker:
    build: .
    command: uv run celery -A config.celery.app worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - ${ENV_FILE:-.env.local}
    environment:
      DEBUG: ${DEBUG:-True}
      DJANGO_ENV: ${DJANGO_ENV:-local}
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-config.django.local}
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      CELERY_BROKER_URL: ${REDIS_URL}
    depends_on:
      - db
      - redis
    restart: unless-stopped
    stop_grace_period: 30s

  celery_beat:
    build: .
    command: uv run celery -A config.celery.app beat --loglevel=info
    volumes:
      - .:/app
    env_file:
      - ${ENV_FILE:-.env.local}
    environment:
      DEBUG: ${DEBUG:-True}
      DJANGO_ENV: ${DJANGO_ENV:-local}
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-config.django.local}
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      CELERY_BROKER_URL: ${REDIS_URL}
    depends_on:
      - db
      - redis
    restart: unless-stopped
    stop_grace_period: 30s
  flower:
    build: .
    command: uv run celery -A config.celery.app flower --port=5555
    volumes:
      - .:/app
    ports:
      - "5555:5555"
    env_file:
      - ${ENV_FILE:-.env.local}
    environment:
      DEBUG: ${DEBUG:-True}
      DJANGO_ENV: ${DJANGO_ENV:-local}
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-config.django.local}
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      CELERY_BROKER_URL: ${REDIS_URL}
    depends_on:
      - redis
    restart: unless-stopped
    stop_grace_period: 30s
  web_profiling:
    build: .
    command: >
      sh -c "
        mkdir -p /app/profiles &&
        chown -R django:django /app/profiles &&
        /app/entrypoint.sh
      "
    volumes:
      - .:/app
      - ./profiles:/app/profiles  # Mount profiles directory
    ports:
      - "8101:8000"
    env_file:
      - ${ENV_FILE:-.env.prof}
    environment:
      DEBUG: ${DEBUG:-True}
      DJANGO_ENV: ${DJANGO_ENV:-prof}
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-config.django.profiling}
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      PROFILING_ENABLED: ${PROFILING_ENABLED:-True}
      PYINSTRUMENT_ENABLED: ${PYINSTRUMENT_ENABLED:-True}
      CELERY_BROKER_URL: ${REDIS_URL}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    profiles:
      - profiling  # Only start when explicitly requested

volumes:
  postgres_data:
  redis_data: